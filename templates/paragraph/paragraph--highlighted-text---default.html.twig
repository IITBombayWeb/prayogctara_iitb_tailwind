{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    'pryg-container'
  ]
%}
{% block paragraph %}
<section class="relative py-10">
  <div{{ attributes.addClass(classes) }}>
    {% block content %}
        <div class="px-10 absolute top-20 lg:-left-3 xl:left-10 2xl:left-56">
          <svg height="24" style="fill:#F8BC28;transform: ;msFilter:;" viewbox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M12 2C6.486 2 2 6.486 2 12s4.486 10 10 10 10-4.486 10-10S17.514 2 12 2z"></path></svg>
        </div>
        <div class="grid grid-cols-2">
          <div>
            <div class="py-10 flex text-pryg-white-v2">
              <h4 class="content:block text-pryg-gray-v2 pr-10 uppercase text-pryg-gray-v2 text-base"> {{ content.field_title }} </h4>

              <hr class="my-auto w-36 border-1 border-pryg-blue-v2 justify-items-start" />
            </div>

            <div class="py-10 text-xl tracking-wide text-pryg-blue-v2 font-normal">
              {{ content.field_text }}
            </div>
            {% if content.field_call.0['#title'] %}
            <div class="py-10">
              <a class="pryg-btn border-2 border-pryg-blue-v2 rounded-full hover:border-pryg-blue-v1 hover:text-pryg-blue-v1" href="{{ content.field_call.0['#url'] }}">{{ content.field_call.0['#title'] }}</a>
            <div>
            {% endif %}
          </div>
        </div>
    {% endblock %}
  </div>
</section>
{% endblock paragraph %}

